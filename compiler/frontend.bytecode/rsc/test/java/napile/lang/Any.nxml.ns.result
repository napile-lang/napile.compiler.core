package napile.lang

static class Any
{
	static meth synchronized(val obj : napile.lang.Any?, val fun : {() -> napile.lang.Null}) : napile.lang.Null
	{
		// compiled code
	}

	static meth assert(val cond : napile.lang.Bool, val message : napile.lang.String?) : napile.lang.Null
	{
		// compiled code
	}

	native meth getClass() : napile.reflect.Class<this>
	{
		// compiled code
	}

	native meth getType() : napile.reflect.Type<this>
	{
		// compiled code
	}

	native meth hashCode() : napile.lang.Int
	{
		// compiled code
	}

	meth equals(val o : napile.lang.Any?) : napile.lang.Bool
	{
		// compiled code
	}

	final native meth fullyEquals(val o : napile.lang.Any?) : napile.lang.Bool
	{
		// compiled code
	}

	heritable meth clone() : this
	{
		// compiled code
	}

	meth toString() : napile.lang.String
	{
		// compiled code
	}

}