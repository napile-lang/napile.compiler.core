
#Parser error messages
semicolon.expected=';' expected
open.brace.expected='[' expected
close.brace.expected=']' expected
open.parenthesis.expected='(' expected
close.parenthesis.expected=')' expected
open.block.expected='}' expected
close.block.expected='{' expected
identifier.expected=Identifier expected
identifier.or.dot.expected=Identifier or '.' expected
identifier.or.open.parenthesis.expected = identifier or '(' expected
comma.expected=',' expected
dot.expected='.' expected
equal.expected='=' expected
num.integer.expected=num integer expected
constant.literal.expected='.' expected
user.defined.type.expected=user defined type expected
type.expected=type expected
returns.expected='returns' expected
string.literal.expected=string literal expected
top.level.def.expected=any top level definition expected
unexpected.token=unexpected token
option.assignment.expected= option assigment expected
name.expected=name expected
value.expected=value expected
number.expected=number expected

group.block.expected=Group block expected
enum.block.expected=Enum block expected
service.block.expected=Service block expected
message.block.expected= Message block expected


#Annotator errors
unresolved.import=unresolved import
unresolved.reference=unresolved reference
unresolved.package=unresolved package

#Options menu
protobuf.full=Google Protocol Buffers
protobuf.settings=Google Protocol Buffers settings
protobuf.settings.compiler=compiler settings
path.to.protoc=Path to Protocol Buffers compiler
protobuf.application.settings=Protocol Buffers Application Settings

#actions
action.newfile.text=Proto File
action.newfile.description=Create a new Protocol Buffers File
action.newfile.dialog.title=Create a new Protocol Buffers File
action.newfile.dialog.promt=Enter a new Protocol Buffers file name

#templates
file.template.group.title=Protocol Buffers

#compiler
compiler.description=protoc
compiler.configurable.enable.compilation.text=Enable compilation
compiler.configurable.protobuf.output.panel.label=Protobuf compiler output
compiler.configurable.path.to.compiler.text=Path to protoc:
compiler.configurable.source.directory=Output source directory:
compiler.validate.error.title=Protocol Buffers compiler
compiler.validate.error.unsupported.os=Plugin compiler does not support this OS.
compiler.validate.error.path.to.protoc=Could not find 'protoc' at path "{0}". Check the compiler configuration.
compiler.validate.error.protoc.not.executable=The 'protoc' compiler file is not executable.
compiler.validate.error.output.source.directory.not.exists="{0}" does not exist.
compiler.validate.error.output.source.directory.not.set=The output source directory for module "{0}" has not been set.
compiler.validate.error.output.source.directory.not.created=Could not created the output source directory "{0}" for module "{1}". Please check your configuration and/or file permissions.
compiler.validate.error.output.source.directory.not.directory=The output source directory setting "{0}" for module "{1}" is a file. Please correct your facet configuration to send its generated output to a directory.
compiler.validate.error.output.source.directory.not.source="{0}" is not a source path for module "{1}". Change your facet configuration or share the path as a source path.
file.chooser.description.select.protobuf.compiler = Select the Google Protocol Buffers compiler "protoc"



# facet
facet.type.name.protobuf = Protobuf Facet
facet.protobuf.settings = Google Protocol Buffers settings
facet.protobuf.installation.chooser.title = Path to the Google Protocol Buffers installation directory
facet.protobuf.output.dir.chooser.title = Path to the Google Protocol Buffers output directory
file.chooser.description.select.output.directory.for.files.generated.by.protobuf.compiler = Select the output directory for files generated by the Google Protocol Buffers compiler
