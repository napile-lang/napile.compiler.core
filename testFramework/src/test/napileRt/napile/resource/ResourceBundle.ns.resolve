package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.resource">resource</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.annotation">annotation</ref>.<ref class="MutableClassDescriptor" to="napile.annotation.VarArgs">VarArgs</ref>
/**
 * @author VISTALL
 */
class ResourceBundle
{
	meth getString(val key : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>, val arg : /*@VarArgs*/ <ref class="MutableClassDescriptor" to="napile.lang.Array">Array</ref><<ref class="MutableClassDescriptor" to="napile.lang.Any">Any</ref>>? = null) : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>
	{
		throw <ref class="ConstructorDescriptor" to="napile.lang.IllegalArgumentException.this">IllegalArgumentException</ref>() // TODO [VISTALL]
	}
}