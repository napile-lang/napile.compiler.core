package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.ui">ui</ref>

/~
 ~ Authors
 ~ * VISTALL
 ~/
class RgbColor : <ref class="MutableClassDescriptor" to="napile.ui.Color">Color</ref>
{
	enum val RED : <ref class="MutableClassDescriptor" to="napile.ui.RgbColor">RgbColor</ref>(0xFF, 0x00, 0x00)

	enum val GREEN : <ref class="MutableClassDescriptor" to="napile.ui.RgbColor">RgbColor</ref>(0x00, 0xFF, 0x00)

	enum val BLUE : <ref class="MutableClassDescriptor" to="napile.ui.RgbColor">RgbColor</ref>(0x00, 0x00, 0xFF)

	val red : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>
	val green : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>
	val blue : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>

	this(<ref class="VariableDescriptorImpl" to="napile.ui.RgbColor.red">red</ref>, <ref class="VariableDescriptorImpl" to="napile.ui.RgbColor.green">green</ref>, <ref class="VariableDescriptorImpl" to="napile.ui.RgbColor.blue">blue</ref>)

	override meth toCmykColor() : <ref class="MutableClassDescriptor" to="napile.ui.CmykColor">CmykColor</ref>
	{
		throw <ref class="ConstructorDescriptor" to="napile.lang.UnsupportedOperationException.this">UnsupportedOperationException</ref>()
	}

	override meth toRgbColor() : <ref class="MutableClassDescriptor" to="napile.ui.RgbColor">RgbColor</ref> = <ref class="MutableClassDescriptor" to="napile.ui.RgbColor">this</ref>
}