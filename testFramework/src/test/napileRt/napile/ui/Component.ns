/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package napile.ui

import napile.ui.render.UiRender
import napile.util.listeners.VariableChangeEvent
import napile.util.listeners.ListenerHolder

/~
 ~ Authors
 ~ * VISTALL
 ~/
abstract class Component
{
	var x : Int = 0

	var y : Int = 0

	var width : Int = 0

	var height : Int = 0

	var enabled : Bool = false

	var visible : Bool
	{
		set
		{
			val old = value

			value = newValue

			variableChangeListener.fire(VariableChangeEvent<Bool>('visible', old, newValue))
		}
	} = false

	val variableChangeListener : ListenerHolder<VariableChangeEvent<Any>> = ListenerHolder();

	this()

	meth add(val c : Component)

	heritable meth render(val render : UiRender)
}