/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.ui">ui</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.annotation">annotation</ref>.<ref class="MutableClassDescriptor" to="napile.annotation.Extension">Extension</ref>

/~
 ~ Authors
 ~ * VISTALL
 ~/
util class UiBuildUtil
{
	meth build<T(val text : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>? = null) : <ref class="MutableClassDescriptor" to="napile.ui.Component">Component</ref>>(val text : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>, val builder : {(val v : <ref class="TypeParameterDescriptorImpl" to="napile.ui.UiBuildUtil.build.T">T</ref>) -> <ref class="MutableClassDescriptor" to="napile.lang.Null">Null</ref>}) : <ref class="TypeParameterDescriptorImpl" to="napile.ui.UiBuildUtil.build.T">T</ref>
	{
		val t = <ref class="ConstructorDescriptor" to="napile.ui.UiBuildUtil.build.T.this">T</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="napile.ui.UiBuildUtil.build.text">text</ref>)

		<ref class="CallParameterAsVariableDescriptorImpl" to="napile.ui.UiBuildUtil.build.builder">builder</ref>(<ref class="LocalVariableDescriptor" to="napile.ui.UiBuildUtil.build.t">t</ref>)

		return <ref class="LocalVariableDescriptor" to="napile.ui.UiBuildUtil.build.t">t</ref>
	}

	@<ref class="MutableClassDescriptor" to="napile.annotation.Extension">Extension</ref>
	meth plus(val comp : <ref class="MutableClassDescriptor" to="napile.ui.Component">Component</ref>, val member : <ref class="MutableClassDescriptor" to="napile.ui.Component">Component</ref>)
	{
		<ref class="CallParameterAsVariableDescriptorImpl" to="napile.ui.UiBuildUtil.plus.comp">comp</ref>.<ref class="SimpleMethodDescriptorImpl" to="napile.ui.Component.add">add</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="napile.ui.UiBuildUtil.plus.member">member</ref>)
	}
}