NapileFileImpl: AsmUtil.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('asm')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('asm')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('members')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('AsmType')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Type')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('asm')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('members')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('AsmAnnotation')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('napile')
            PsiElement(DOT)('.')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('asm')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('members')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('typeConstructor')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('AsmClassType')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiElement(DOC_COMMENT)
      PsiElement(DOC_START)('/~')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(TILDE)('~')
      PsiElement(WHITE_SPACE)(' ')
      NapileDocLineImpl(DOC_LINE)
        PsiElement(TEXT_PART)('A')
        PsiElement(TEXT_PART)('u')
        PsiElement(TEXT_PART)('t')
        PsiElement(TEXT_PART)('h')
        PsiElement(TEXT_PART)('o')
        PsiElement(TEXT_PART)('r')
        PsiElement(TEXT_PART)('s')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(TILDE)('~')
      PsiElement(WHITE_SPACE)(' ')
      NapileDocLineImpl(DOC_LINE)
        PsiElement(TEXT_PART)('*')
        PsiElement(TEXT_PART)(' ')
        PsiElement(TEXT_PART)('V')
        PsiElement(TEXT_PART)('I')
        PsiElement(TEXT_PART)('S')
        PsiElement(TEXT_PART)('T')
        PsiElement(TEXT_PART)('A')
        PsiElement(TEXT_PART)('L')
        PsiElement(TEXT_PART)('L')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(DOC_END)('~/')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      PsiElement(util)('util')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('AsmUtil')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      METHOD
        PsiElement(DOC_COMMENT)
          PsiElement(DOC_START)('/~')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(TILDE)('~')
          PsiElement(WHITE_SPACE)(' ')
          NapileDocLineImpl(DOC_LINE)
            PsiElement(TEXT_PART)('R')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)(':')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)('m')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('q')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('v')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('f')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('`')
            PsiElement(TEXT_PART)('T')
            PsiElement(TEXT_PART)('`')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(DOC_END)('~/')
        PsiWhiteSpace('\n\t')
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('toAsmType')
        TYPE_PARAMETER_LIST
          PsiElement(LT)('<')
          TYPE_PARAMETER
            MODIFIER_LIST('')
            PsiElement(IDENTIFIER)('T')
          PsiElement(GT)('>')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('AsmType')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('toAsmType')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileTypeOfExpression(TYPE_OF)
                PsiElement(typeOf)('typeOf')
                PsiElement(LPAR)('(')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('T')
                PsiElement(RPAR)(')')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        PsiElement(DOC_COMMENT)
          PsiElement(DOC_START)('/~')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(TILDE)('~')
          PsiElement(WHITE_SPACE)(' ')
          NapileDocLineImpl(DOC_LINE)
            PsiElement(TEXT_PART)('R')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)(':')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)('m')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('q')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('v')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('f')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('`')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('`')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(DOC_END)('~/')
        PsiWhiteSpace('\n\t')
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('toAsmType')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('type')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Type')
                NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                  PsiElement(LT)('<')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileNullableTypeImpl(NULLABLE_TYPE)
                      NapileUserTypeImpl(USER_TYPE)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('Any')
                      PsiElement(QUEST)('?')
                  PsiElement(GT)('>')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('AsmType')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('parameters')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Array')
              NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                PsiElement(LT)('<')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('AsmType')
                PsiElement(GT)('>')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('type')
                      PsiElement(DOT)('.')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('parameters')
                    PsiElement(DOT)('.')
                    NapileCallExpression(CALL_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('size')
                      NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                        PsiElement(LPAR)('(')
                        PsiElement(RPAR)(')')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileConstantExpressionImpl(INTEGER_CONSTANT)
              PsiElement(INTEGER_LITERAL)('0')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileForExpression(FOR)
            PsiElement(for)('for')
            PsiElement(LPAR)('(')
            CALL_PARAMETER_AS_VARIABLE
              MODIFIER_LIST('')
              PsiElement(IDENTIFIER)('c')
            PsiWhiteSpace(' ')
            PsiElement(in)('in')
            PsiWhiteSpace(' ')
            NapileContainerNode(LOOP_RANGE)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('type')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('parameters')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(BODY)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('parameters')
                  NapileContainerNode(INDICES)
                    PsiElement(LBRACKET)('[')
                    NapilePostfixExpression(POSTFIX_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('i')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(PLUSPLUS)('++')
                    PsiElement(RBRACKET)(']')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EQ)('=')
                PsiWhiteSpace(' ')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('toAsmType')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    NapileValueArgument(VALUE_ARGUMENT)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('c')
                    PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('annotations')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Array')
              NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                PsiElement(LT)('<')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('AsmAnnotation')
                PsiElement(GT)('>')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('0')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          PsiComment(EOL_COMMENT)('//TODO [VISTALL] no annotations - currently')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('AsmType')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('annotations')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileCallExpression(CALL_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('AsmClassType')
                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                      PsiElement(LPAR)('(')
                      NapileValueArgument(VALUE_ARGUMENT)
                        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('type')
                            PsiElement(DOT)('.')
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('constructorClass')
                          PsiElement(DOT)('.')
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('name')
                      PsiElement(RPAR)(')')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('parameters')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('type')
                    PsiElement(DOT)('.')
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('nullable')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
