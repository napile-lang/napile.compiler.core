NapileFileImpl: AsmType.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('asm')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('members')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('annotation')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Immutable')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('logging')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Logger')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n * @date 10:46/17.01.13\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST('')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('AsmType')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('annotations')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileAnnotationImpl(ANNOTATION)
            PsiElement(AT)('@')
            NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Immutable')
          PsiWhiteSpace(' ')
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Array')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('AsmAnnotation')
              PsiElement(GT)('>')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('constructor')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('AsmTypeConstructor')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('parameters')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileAnnotationImpl(ANNOTATION)
            PsiElement(AT)('@')
            NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Immutable')
          PsiWhiteSpace(' ')
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Array')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('AsmType')
              PsiElement(GT)('>')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('nullable')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Bool')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          NapileCallParameterAsReferenceImpl(CALL_PARAMETER_AS_REFERENCE)
            MODIFIER_LIST('')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('annotations')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          NapileCallParameterAsReferenceImpl(CALL_PARAMETER_AS_REFERENCE)
            MODIFIER_LIST('')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('constructor')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          NapileCallParameterAsReferenceImpl(CALL_PARAMETER_AS_REFERENCE)
            MODIFIER_LIST('')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('parameters')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          NapileCallParameterAsReferenceImpl(CALL_PARAMETER_AS_REFERENCE)
            MODIFIER_LIST('')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('nullable')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('equals')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('o')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Bool')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileIsExpression(IS_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('o')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(is)('is')
                PsiWhiteSpace(' ')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('AsmType')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(THEN)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('nullable')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('o')
                        PsiElement(DOT)('.')
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('nullable')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t\t')
                  NapileContainerNode(THEN)
                    NapileReturnExpression(RETURN)
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                        PsiElement(false)('false')
                PsiWhiteSpace('\n\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('parameters')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('o')
                        PsiElement(DOT)('.')
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('parameters')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t\t')
                  NapileContainerNode(THEN)
                    NapileReturnExpression(RETURN)
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                        PsiElement(false)('false')
                PsiElement(SEMICOLON)(';')
                PsiWhiteSpace('\n\n\t\t\t')
                MODIFIER_LIST('')
                NapileReturnExpression(RETURN)
                  PsiElement(return)('return')
                  PsiWhiteSpace(' ')
                  NapileBinaryExpression(BINARY_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('constructor')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                      PsiElement(EQEQ)('==')
                    PsiWhiteSpace(' ')
                    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('o')
                      PsiElement(DOT)('.')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('constructor')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
            PsiWhiteSpace('\n\t\t')
            PsiElement(else)('else')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(ELSE)
              NapileReturnExpression(RETURN)
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                  PsiElement(false)('false')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('toString')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('String')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('builder')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('StringBuilder')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('builder')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(PLUSEQ)('+=')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('constructor')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('parameters')
                  PsiElement(DOT)('.')
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('length')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(GT)('>')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(INTEGER_CONSTANT)
                  PsiElement(INTEGER_LITERAL)('0')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(THEN)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileBinaryExpression(BINARY_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('builder')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUSEQ)('+=')
                  PsiWhiteSpace(' ')
                  NapileConstantExpressionImpl(STRING_CONSTANT)
                    PsiElement(STRING_LITERAL)(''<'')
                PsiWhiteSpace('\n\t\t\t')
                VARIABLE
                  MODIFIER_LIST('')
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  TYPE_PARAMETER_LIST('')
                  PsiElement(IDENTIFIER)('i')
                  PsiWhiteSpace(' ')
                  PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('0')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileWhileExpression(WHILE)
                  PsiElement(while)('while')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('i')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(LT)('<')
                      PsiWhiteSpace(' ')
                      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('parameters')
                        PsiElement(DOT)('.')
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('length')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t')
                  NapileContainerNode(BODY)
                    NapileBlockExpressionImpl(BLOCK)
                      PsiElement(LBRACE)('{')
                      PsiWhiteSpace('\n\t\t\t\t')
                      MODIFIER_LIST('')
                      NapileIfExpression(IF)
                        PsiElement(if)('if')
                        PsiElement(LPAR)('(')
                        NapileContainerNode(CONDITION)
                          NapileBinaryExpression(BINARY_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('i')
                            PsiWhiteSpace(' ')
                            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                              PsiElement(EXCLEQ)('!=')
                            PsiWhiteSpace(' ')
                            NapileConstantExpressionImpl(INTEGER_CONSTANT)
                              PsiElement(INTEGER_LITERAL)('0')
                        PsiElement(RPAR)(')')
                        PsiWhiteSpace('\n\t\t\t\t\t')
                        NapileContainerNode(THEN)
                          NapileBinaryExpression(BINARY_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('builder')
                            PsiWhiteSpace(' ')
                            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                              PsiElement(PLUSEQ)('+=')
                            PsiWhiteSpace(' ')
                            NapileConstantExpressionImpl(STRING_CONSTANT)
                              PsiElement(STRING_LITERAL)('', '')
                      PsiWhiteSpace('\n\t\t\t\t')
                      MODIFIER_LIST('')
                      NapileBinaryExpression(BINARY_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('builder')
                        PsiWhiteSpace(' ')
                        NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                          PsiElement(PLUSEQ)('+=')
                        PsiWhiteSpace(' ')
                        NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('parameters')
                          NapileContainerNode(INDICES)
                            PsiElement(LBRACKET)('[')
                            NapilePostfixExpression(POSTFIX_EXPRESSION)
                              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(IDENTIFIER)('i')
                              PsiWhiteSpace(' ')
                              NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                                PsiElement(PLUSPLUS)('++')
                            PsiElement(RBRACKET)(']')
                      PsiWhiteSpace('\n\t\t\t')
                      PsiElement(RBRACE)('}')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileBinaryExpression(BINARY_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('builder')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUSEQ)('+=')
                  PsiWhiteSpace(' ')
                  NapileConstantExpressionImpl(STRING_CONSTANT)
                    PsiElement(STRING_LITERAL)(''>'')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('nullable')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('builder')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(PLUSEQ)('+=')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(STRING_CONSTANT)
                  PsiElement(STRING_LITERAL)(''?'')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('builder')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('toString')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
