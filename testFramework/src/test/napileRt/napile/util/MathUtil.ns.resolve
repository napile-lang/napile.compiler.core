/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.util">util</ref>

/~
 ~ Authors
 ~ * VISTALL
 ~/
util class MathUtil
{
	meth min(val a : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>, val b : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>) : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref> = if(<ref class="CallParameterAsVariableDescriptorImpl" to="napile.util.MathUtil.min.a">a</ref> <ref class="SimpleMethodDescriptorImpl" to="napile.lang.Int.compareTo"><=</ref> <ref class="CallParameterAsVariableDescriptorImpl" to="napile.util.MathUtil.min.b">b</ref>) <ref class="CallParameterAsVariableDescriptorImpl" to="napile.util.MathUtil.min.a">a</ref> else <ref class="CallParameterAsVariableDescriptorImpl" to="napile.util.MathUtil.min.b">b</ref>
}