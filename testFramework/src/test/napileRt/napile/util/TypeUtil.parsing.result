NapileFileImpl: TypeUtil.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('util')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Type')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiElement(DOC_COMMENT)
      PsiElement(DOC_START)('/~')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(TILDE)('~')
      PsiElement(WHITE_SPACE)(' ')
      NapileDocLineImpl(DOC_LINE)
        PsiElement(TEXT_PART)('A')
        PsiElement(TEXT_PART)('u')
        PsiElement(TEXT_PART)('t')
        PsiElement(TEXT_PART)('h')
        PsiElement(TEXT_PART)('o')
        PsiElement(TEXT_PART)('r')
        PsiElement(TEXT_PART)('s')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(TILDE)('~')
      PsiElement(WHITE_SPACE)(' ')
      NapileDocLineImpl(DOC_LINE)
        PsiElement(TEXT_PART)('*')
        PsiElement(TEXT_PART)(' ')
        PsiElement(TEXT_PART)('V')
        PsiElement(TEXT_PART)('I')
        PsiElement(TEXT_PART)('S')
        PsiElement(TEXT_PART)('T')
        PsiElement(TEXT_PART)('A')
        PsiElement(TEXT_PART)('L')
        PsiElement(TEXT_PART)('L')
      PsiElement(NEW_LINE)('\n')
      PsiElement(WHITE_SPACE)(' ')
      PsiElement(DOC_END)('~/')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      PsiElement(util)('util')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('TypeUtil')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('getDefaultValue')
        TYPE_PARAMETER_LIST
          PsiElement(LT)('<')
          TYPE_PARAMETER
            MODIFIER_LIST('')
            PsiElement(IDENTIFIER)('E')
          PsiElement(GT)('>')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('throwIfNotFound')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Bool')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('E')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('type')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileTypeOfExpression(TYPE_OF)
              PsiElement(typeOf)('typeOf')
              PsiElement(LPAR)('(')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('E')
              PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('type')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('nullable')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileReturnExpression(RETURN)
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('getNullAsNotNull')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            PsiElement(else)('else')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(ELSE)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                VARIABLE
                  MODIFIER_LIST('')
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  TYPE_PARAMETER_LIST('')
                  PsiElement(IDENTIFIER)('def')
                  PsiWhiteSpace(' ')
                  PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('type')
                    PsiElement(DOT)('.')
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('defaultValue')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('def')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EQEQ)('==')
                      PsiWhiteSpace(' ')
                      NapileConstantExpressionImpl(NULL)
                        PsiElement(null)('null')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t')
                  NapileContainerNode(THEN)
                    NapileBlockExpressionImpl(BLOCK)
                      PsiElement(LBRACE)('{')
                      PsiWhiteSpace('\n\t\t\t\t')
                      MODIFIER_LIST('')
                      NapileIfExpression(IF)
                        PsiElement(if)('if')
                        PsiElement(LPAR)('(')
                        NapileContainerNode(CONDITION)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('throwIfNotFound')
                        PsiElement(RPAR)(')')
                        PsiWhiteSpace('\n\t\t\t\t\t')
                        NapileContainerNode(THEN)
                          NapileThrowExpression(THROW)
                            PsiElement(throw)('throw')
                            PsiWhiteSpace(' ')
                            NapileCallExpression(CALL_EXPRESSION)
                              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(IDENTIFIER)('IllegalArgumentException')
                              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                                PsiElement(LPAR)('(')
                                NapileValueArgument(VALUE_ARGUMENT)
                                  NapileBinaryExpression(BINARY_EXPRESSION)
                                    NapileConstantExpressionImpl(STRING_CONSTANT)
                                      PsiElement(STRING_LITERAL)('"cant find default value on type "')
                                    PsiWhiteSpace(' ')
                                    NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                                      PsiElement(PLUS)('+')
                                    PsiWhiteSpace(' ')
                                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                      PsiElement(IDENTIFIER)('type')
                                PsiElement(RPAR)(')')
                        PsiWhiteSpace('\n\t\t\t\t')
                        PsiElement(else)('else')
                        PsiWhiteSpace('\n\t\t\t\t\t')
                        NapileContainerNode(ELSE)
                          NapileReturnExpression(RETURN)
                            PsiElement(return)('return')
                            PsiWhiteSpace(' ')
                            NapileCallExpression(CALL_EXPRESSION)
                              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(IDENTIFIER)('getInvalidNotNull')
                              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                                PsiElement(LPAR)('(')
                                PsiElement(RPAR)(')')
                      PsiWhiteSpace('\n\t\t\t')
                      PsiElement(RBRACE)('}')
                  PsiWhiteSpace('\n\t\t\t')
                  PsiElement(else)('else')
                  PsiWhiteSpace('\n\t\t\t\t')
                  NapileContainerNode(ELSE)
                    NapileReturnExpression(RETURN)
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('def')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        PsiElement(DOC_COMMENT)
          PsiElement(DOC_START)('/~')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(TILDE)('~')
          PsiElement(WHITE_SPACE)(' ')
          NapileDocLineImpl(DOC_LINE)
            PsiElement(TEXT_PART)('R')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('N')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('.')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(TILDE)('~')
          PsiElement(WHITE_SPACE)(' ')
          NapileDocLineImpl(DOC_LINE)
            PsiElement(TEXT_PART)('T')
            PsiElement(TEXT_PART)('h')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('h')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('c')
            PsiElement(TEXT_PART)('k')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)('l')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('-')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('f')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('f')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('c')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('n')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('u')
            PsiElement(TEXT_PART)('c')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('o')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('i')
            PsiElement(TEXT_PART)('s')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('y')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)(' ')
            PsiElement(TEXT_PART)('p')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('r')
            PsiElement(TEXT_PART)('a')
            PsiElement(TEXT_PART)('m')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('t')
            PsiElement(TEXT_PART)('e')
            PsiElement(TEXT_PART)('r')
          PsiElement(NEW_LINE)('\n')
          PsiElement(WHITE_SPACE)('\t')
          PsiElement(WHITE_SPACE)(' ')
          PsiElement(DOC_END)('~/')
        PsiWhiteSpace('\n\t')
        MODIFIER_LIST
          PsiElement(local)('local')
          PsiWhiteSpace(' ')
          PsiElement(native)('native')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('getNullAsNotNull')
        TYPE_PARAMETER_LIST
          PsiElement(LT)('<')
          TYPE_PARAMETER
            MODIFIER_LIST('')
            PsiElement(IDENTIFIER)('E')
          PsiElement(GT)('>')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('E')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(local)('local')
          PsiWhiteSpace(' ')
          PsiElement(native)('native')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('getInvalidNotNull')
        TYPE_PARAMETER_LIST
          PsiElement(LT)('<')
          TYPE_PARAMETER
            MODIFIER_LIST('')
            PsiElement(IDENTIFIER)('E')
          PsiElement(GT)('>')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('E')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
