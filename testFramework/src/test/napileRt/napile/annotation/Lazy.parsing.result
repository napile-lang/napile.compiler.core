NapileFileImpl: Lazy.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('annotation')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n * @date 11:07/17.01.13\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST
      NapileAnnotationImpl(ANNOTATION)
        PsiElement(AT)('@')
        NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
          NapileTypeReferenceImpl(TYPE_REFERENCE)
            NapileUserTypeImpl(USER_TYPE)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Annotation')
      PsiWhiteSpace('\n')
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Lazy')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('value')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('LazyType')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          NapileCallParameterAsReferenceImpl(CALL_PARAMETER_AS_REFERENCE)
            MODIFIER_LIST('')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('value')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
