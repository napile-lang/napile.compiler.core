/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.io]>io</PackageDescriptorImpl[napile.io]>

/**
 * @author VISTALL
 */
util class IoUtil
{
	meth use<T : <MutableClassDescriptor[napile.io.Closeable]>Closeable</MutableClassDescriptor[napile.io.Closeable]>>(val stream : <TypeParameterDescriptorImpl[napile.io.IoUtil.use.T]>T</TypeParameterDescriptorImpl[napile.io.IoUtil.use.T]>, val block : {(val it : <TypeParameterDescriptorImpl[napile.io.IoUtil.use.T]>T</TypeParameterDescriptorImpl[napile.io.IoUtil.use.T]>) -> <MutableClassDescriptor[napile.lang.Null]>Null</MutableClassDescriptor[napile.lang.Null]>})
	{
		try
		{
			<CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.block]>block</CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.block]>(<CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.stream]>stream</CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.stream]>)
		}
		catch(val e : <MutableClassDescriptor[napile.lang.Exception]>Exception</MutableClassDescriptor[napile.lang.Exception]>)
		{
			// ignore
		}
		finally
		{
			try
			{
				<CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.stream]>stream</CallParameterAsVariableDescriptorImpl[napile.io.IoUtil.use.stream]>.<SimpleMethodDescriptorImpl[napile.io.Closeable.close]>close</SimpleMethodDescriptorImpl[napile.io.Closeable.close]>()
			}
			catch(val e : <MutableClassDescriptor[napile.lang.Exception]>Exception</MutableClassDescriptor[napile.lang.Exception]>)
			{
				// ignore
			}
		}
	}
}