NapileFileImpl: File.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('io')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST('')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('File')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST('')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('path')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('String')
        PsiWhiteSpace('\n\t')
        PsiElement(LBRACE)('{')
        PsiWhiteSpace('\n\t\t')
        NapileVariableAccessorImpl(VARIABLE_ACCESSOR)
          MODIFIER_LIST
            PsiElement(local)('local')
          PsiWhiteSpace(' ')
          PsiElement(set)('set')
        PsiWhiteSpace('\n\t')
        MODIFIER_LIST('')
        PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('properPath')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileNullableTypeImpl(NULLABLE_TYPE)
            NapileUserTypeImpl(USER_TYPE)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Array')
              NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                PsiElement(LT)('<')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('Byte')
                PsiElement(GT)('>')
            PsiElement(QUEST)('?')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileConstantExpressionImpl(NULL)
          PsiElement(null)('null')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('cName')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('String')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('path')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('fixSlashes')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('cName')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('exists')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Bool')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('path')
                  PsiElement(DOT)('.')
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('count')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EQEQ)('==')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(INTEGER_CONSTANT)
                  PsiElement(INTEGER_LITERAL)('0')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileReturnExpression(RETURN)
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                  PsiElement(false)('false')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileSafeQualifiedExpressionImpl(SAFE_ACCESS_EXPRESSION)
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('SecurityManager')
              PsiElement(DOT)('.')
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('INSTANCE')
            PsiElement(SAFE_ACCESS)('?.')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('checkRead')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('path')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('existsImpl')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileCallExpression(CALL_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('properPath')
                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                      PsiElement(LPAR)('(')
                      NapileValueArgument(VALUE_ARGUMENT)
                        NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                          PsiElement(true)('true')
                      PsiElement(RPAR)(')')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(local)('local')
          PsiWhiteSpace(' ')
          PsiElement(native)('native')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('existsImpl')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('array')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Array')
                NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                  PsiElement(LT)('<')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileUserTypeImpl(USER_TYPE)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('Byte')
                  PsiElement(GT)('>')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Bool')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('fixSlashes')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('cName')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('String')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('String')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          PsiComment(EOL_COMMENT)('//TODO [VISTALL]')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('cName')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(covered)('covered')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('properPath')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('internal')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Bool')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Array')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Byte')
              PsiElement(GT)('>')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('properPath')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EXCLEQ)('!=')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(NULL)
                  PsiElement(null)('null')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileReturnExpression(RETURN)
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                NapilePostfixExpression(POSTFIX_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('properPath')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(EXCLEXCL)('!!')
          PsiWhiteSpace('\n\n\t\t')
          PsiComment(EOL_COMMENT)('//TODO [VISTALL]')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('properPath')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('path')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('getBytes')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapilePostfixExpression(POSTFIX_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('properPath')
              NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                PsiElement(EXCLEXCL)('!!')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
