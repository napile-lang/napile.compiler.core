package <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.module]>module</PackageDescriptorImpl[napile.module]>

import <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.resource]>resource</PackageDescriptorImpl[napile.resource]>.<MutableClassDescriptor[napile.resource.ResourceBundle]>ResourceBundle</MutableClassDescriptor[napile.resource.ResourceBundle]>
import <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.annotation]>annotation</PackageDescriptorImpl[napile.annotation]>.<MutableClassDescriptor[napile.annotation.Immutable]>Immutable</MutableClassDescriptor[napile.annotation.Immutable]>
import <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.module]>module</PackageDescriptorImpl[napile.module]>.<PackageDescriptorImpl[napile.module.extension]>extension</PackageDescriptorImpl[napile.module.extension]>.<MutableClassDescriptor[napile.module.extension.ExtensionPoint]>ExtensionPoint</MutableClassDescriptor[napile.module.extension.ExtensionPoint]>

/**
 * @author VISTALL
 */
class Module
{
	val id : <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>

	val name : <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>

	val extensionPoints : @<MutableClassDescriptor[napile.annotation.Immutable]>Immutable</MutableClassDescriptor[napile.annotation.Immutable]> <MutableClassDescriptor[napile.lang.Array]>Array</MutableClassDescriptor[napile.lang.Array]><<MutableClassDescriptor[napile.module.extension.ExtensionPoint]>ExtensionPoint</MutableClassDescriptor[napile.module.extension.ExtensionPoint]>> = <SimpleMethodDescriptorImpl[napile.module.Module.getExtensionPoints]>getExtensionPoints</SimpleMethodDescriptorImpl[napile.module.Module.getExtensionPoints]>()

	this(<VariableDescriptorImpl[napile.module.Module.id]>id</VariableDescriptorImpl[napile.module.Module.id]>, <VariableDescriptorImpl[napile.module.Module.name]>name</VariableDescriptorImpl[napile.module.Module.name]>)

	local native meth getExtensionPoints() : <MutableClassDescriptor[napile.lang.Array]>Array</MutableClassDescriptor[napile.lang.Array]><<MutableClassDescriptor[napile.module.extension.ExtensionPoint]>ExtensionPoint</MutableClassDescriptor[napile.module.extension.ExtensionPoint]>>

	static meth getBundle() : <MutableClassDescriptor[napile.resource.ResourceBundle]>ResourceBundle</MutableClassDescriptor[napile.resource.ResourceBundle]>
	{
		throw <ConstructorDescriptor[napile.lang.IllegalArgumentException.this]>IllegalArgumentException</ConstructorDescriptor[napile.lang.IllegalArgumentException.this]>() // TODO [VISTALL]
	}
}