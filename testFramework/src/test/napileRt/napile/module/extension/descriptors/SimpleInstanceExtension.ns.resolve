/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.module">module</ref>.<ref class="PackageDescriptorImpl" to="napile.module.extension">extension</ref>.<ref class="PackageDescriptorImpl" to="napile.module.extension.descriptors">descriptors</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.module">module</ref>.<ref class="PackageDescriptorImpl" to="napile.module.extension">extension</ref>.<ref class="MutableClassDescriptor" to="napile.module.extension.ExtensionPointName">ExtensionPointName</ref>

/~
 ~ This is simple extension - that have one variable - instance of `T`
 ~ Diff between `SimpleFactoryExtension` - it handle singleton of `T`
 ~
 ~ Authors
 ~ * VISTALL
 ~/
class SimpleInstanceExtension<T()>
{
	val impl : <ref class="TypeParameterDescriptorImpl" to="napile.module.extension.descriptors.SimpleInstanceExtension.T">T</ref> = <ref class="ConstructorDescriptor" to="napile.module.extension.descriptors.SimpleInstanceExtension.T.this">T</ref>()

	this()
}