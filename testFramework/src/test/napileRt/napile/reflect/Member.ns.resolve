package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.reflect">reflect</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.annotation">annotation</ref>.<ref class="MutableClassDescriptor" to="napile.annotation.Immutable">Immutable</ref>
/**
 * @author VISTALL
 */
abstract class Member : <ref class="MutableClassDescriptor" to="napile.reflect.AnnotationOwner">AnnotationOwner</ref>
{
	final val ownerClass : <ref class="MutableClassDescriptor" to="napile.reflect.Class">Class</ref><<ref class="MutableClassDescriptor" to="napile.lang.Any">Any</ref>>?

	final val name : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>

	final val modifiers : @<ref class="MutableClassDescriptor" to="napile.annotation.Immutable">Immutable</ref> <ref class="MutableClassDescriptor" to="napile.lang.Array">Array</ref><<ref class="MutableClassDescriptor" to="napile.reflect.Modifier">Modifier</ref>>

	covered this(<ref class="VariableDescriptorImpl" to="napile.reflect.Member.ownerClass">ownerClass</ref>, <ref class="VariableDescriptorImpl" to="napile.reflect.Member.name">name</ref>, <ref class="VariableDescriptorImpl" to="napile.reflect.Member.modifiers">modifiers</ref>, val annotations : <ref class="MutableClassDescriptor" to="napile.lang.Array">Array</ref><<ref class="MutableClassDescriptor" to="napile.lang.Any">Any</ref>>) : <ref class="MutableClassDescriptor" to="napile.reflect.AnnotationOwner">AnnotationOwner</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="napile.reflect.Member.this.annotations">annotations</ref>)

	meth isStatic() : <ref class="MutableClassDescriptor" to="napile.lang.Bool">Bool</ref> = <ref class="MutableClassDescriptor" to="napile.lang.ArrayUtil">ArrayUtil</ref>.<ref class="SimpleMethodDescriptorImpl" to="napile.lang.ArrayUtil.contains">contains</ref>(<ref class="VariableDescriptorImpl" to="napile.reflect.Member.modifiers">modifiers</ref>, <ref class="MutableClassDescriptor" to="napile.reflect.Modifier">Modifier</ref>.<ref class="VariableDescriptorImpl" to="napile.reflect.Modifier.STATIC">STATIC</ref>)
}