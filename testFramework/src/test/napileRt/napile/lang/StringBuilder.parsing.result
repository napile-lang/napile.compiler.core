NapileFileImpl: StringBuilder.ns
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('lang')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST
      PsiElement(final)('final')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('StringBuilder')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('array')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Array')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Char')
              PsiElement(GT)('>')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('Array')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Char')
            PsiElement(GT)('>')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileConstantExpressionImpl(INTEGER_CONSTANT)
                PsiElement(INTEGER_LITERAL)('10')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('count')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Int')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileConstantExpressionImpl(INTEGER_CONSTANT)
          PsiElement(INTEGER_LITERAL)('0')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('plus')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('value')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileSelfTypeImpl(SELF_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(this)('this')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('str')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileIfExpression(IF)
              PsiElement(if)('if')
              PsiElement(LPAR)('(')
              NapileContainerNode(CONDITION)
                NapileIsExpression(IS_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('value')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(is)('is')
                  PsiWhiteSpace(' ')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileUserTypeImpl(USER_TYPE)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('String')
              PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              NapileContainerNode(THEN)
                NapileBinaryExpressionWithTypeRHS(BINARY_WITH_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('value')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(as)('as')
                  PsiWhiteSpace(' ')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileUserTypeImpl(USER_TYPE)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('String')
              PsiWhiteSpace(' ')
              PsiElement(else)('else')
              PsiWhiteSpace(' ')
              NapileContainerNode(ELSE)
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('value')
                  PsiElement(DOT)('.')
                  NapileCallExpression(CALL_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('toString')
                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('newCount')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileBinaryExpression(BINARY_EXPRESSION)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('str')
                PsiElement(DOT)('.')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('size')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                PsiElement(PLUS)('+')
              PsiWhiteSpace(' ')
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('count')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('newCount')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(GT)('>')
                PsiWhiteSpace(' ')
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('array')
                  PsiElement(DOT)('.')
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('length')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('expandCapacity')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('newCount')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('str')
            PsiElement(DOT)('.')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('getChars')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('0')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('str')
                    PsiElement(DOT)('.')
                    NapileCallExpression(CALL_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('size')
                      NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                        PsiElement(LPAR)('(')
                        PsiElement(RPAR)(')')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('array')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('count')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('count')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('newCount')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileThisExpression(THIS_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(this)('this')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('expandCapacity')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('minimumCapacity')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Int')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('newCapacity')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileBinaryExpression(BINARY_EXPRESSION)
              NapileParenthesizedExpression(PARENTHESIZED)
                PsiElement(LPAR)('(')
                NapileBinaryExpression(BINARY_EXPRESSION)
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('array')
                    PsiElement(DOT)('.')
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('length')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUS)('+')
                  PsiWhiteSpace(' ')
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('1')
                PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                PsiElement(MUL)('*')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(INTEGER_CONSTANT)
                PsiElement(INTEGER_LITERAL)('2')
            PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('newCapacity')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(LT)('<')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(INTEGER_CONSTANT)
                  PsiElement(INTEGER_LITERAL)('0')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('newCapacity')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EQ)('=')
                PsiWhiteSpace(' ')
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Int')
                  PsiElement(DOT)('.')
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('MAX_VALUE')
              PsiElement(SEMICOLON)(';')
            PsiWhiteSpace('\n\t\t')
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            NapileContainerNode(ELSE)
              NapileIfExpression(IF)
                PsiElement(if)('if')
                PsiWhiteSpace(' ')
                PsiElement(LPAR)('(')
                NapileContainerNode(CONDITION)
                  NapileBinaryExpression(BINARY_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('minimumCapacity')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                      PsiElement(GT)('>')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('newCapacity')
                PsiElement(RPAR)(')')
                PsiWhiteSpace('\n\t\t\t')
                NapileContainerNode(THEN)
                  NapileBinaryExpression(BINARY_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('newCapacity')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                      PsiElement(EQ)('=')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('minimumCapacity')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('array')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('ArrayUtil')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('copyOf')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('array')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('newCapacity')
                  PsiElement(RPAR)(')')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('toString')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('String')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('String')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('array')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('0')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('count')
                PsiElement(RPAR)(')')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
