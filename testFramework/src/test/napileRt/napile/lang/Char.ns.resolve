package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.lang">lang</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.annotation">annotation</ref>.<ref class="MutableClassDescriptor" to="napile.annotation.DefaultValue">DefaultValue</ref>

/**
 * @author VISTALL
 */
@<ref class="MutableClassDescriptor" to="napile.annotation.DefaultValue">DefaultValue</ref>('\0'.<ref class="SimpleMethodDescriptorImpl" to="napile.lang.String.toChar">toChar</ref>())
final class Char : <ref class="MutableClassDescriptor" to="napile.lang.Number">Number</ref>
{
	local this()

	native override meth toByte() : <ref class="MutableClassDescriptor" to="napile.lang.Byte">Byte</ref>

	native override meth toShort() : <ref class="MutableClassDescriptor" to="napile.lang.Short">Short</ref>

	native override meth toInt() : <ref class="MutableClassDescriptor" to="napile.lang.Int">Int</ref>

	native override meth toLong() : <ref class="MutableClassDescriptor" to="napile.lang.Long">Long</ref>

	native override meth toFloat() : <ref class="MutableClassDescriptor" to="napile.lang.Float">Float</ref>

	native override meth toDouble() : <ref class="MutableClassDescriptor" to="napile.lang.Double">Double</ref>

	override native meth equals(val o : <ref class="MutableClassDescriptor" to="napile.lang.Any">Any</ref>?) : <ref class="MutableClassDescriptor" to="napile.lang.Bool">Bool</ref>

	override native meth toString() : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>
}