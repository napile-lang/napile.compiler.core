NapileFileImpl: HashMap.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('collection')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Class')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('annotation')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('DefaultValue')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('annotation')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('InheritImmutable')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('util')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('TypeUtil')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST('')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('HashMap')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        MODIFIER_LIST('')
        PsiElement(IDENTIFIER)('K')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      TYPE_PARAMETER
        MODIFIER_LIST('')
        PsiElement(IDENTIFIER)('V')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    NapileTypeListImpl(EXTEND_TYPE_LIST)
      NapileTypeReferenceImpl(TYPE_REFERENCE)
        NapileUserTypeImpl(USER_TYPE)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('Map')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('K')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('V')
            PsiElement(GT)('>')
    PsiWhiteSpace('\n')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('keys')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('List')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('K')
              PsiElement(GT)('>')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('ArrayList')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('K')
            PsiElement(GT)('>')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('values')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('List')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('V')
              PsiElement(GT)('>')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('ArrayList')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('V')
            PsiElement(GT)('>')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('size')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Int')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileConstantExpressionImpl(INTEGER_CONSTANT)
          PsiElement(INTEGER_LITERAL)('0')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('entrySet')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileAnnotationImpl(ANNOTATION)
            PsiElement(AT)('@')
            NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('InheritImmutable')
          PsiWhiteSpace(' ')
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Set')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileMultiTypeImpl(MULTI_TYPE)
                  PsiElement(LBRACKET)('[')
                  VARIABLE
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    TYPE_PARAMETER_LIST('')
                    PsiElement(IDENTIFIER)('key')
                    PsiElement(COLON)(':')
                    PsiWhiteSpace(' ')
                    NapileTypeReferenceImpl(TYPE_REFERENCE)
                      NapileUserTypeImpl(USER_TYPE)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('K')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  VARIABLE
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    TYPE_PARAMETER_LIST('')
                    PsiElement(IDENTIFIER)('value')
                    PsiElement(COLON)(':')
                    PsiWhiteSpace(' ')
                    NapileTypeReferenceImpl(TYPE_REFERENCE)
                      NapileUserTypeImpl(USER_TYPE)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('V')
                  PsiElement(RBRACKET)(']')
              PsiElement(GT)('>')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileThrowExpression(THROW)
            PsiElement(throw)('throw')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('UnsupportedOperationException')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('put')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('key')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('K')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('value')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('V')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileConstantExpressionImpl(INTEGER_CONSTANT)
              PsiElement(INTEGER_LITERAL)('0')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileWhileExpression(WHILE)
            PsiElement(while)('while')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('index')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(LT)('<')
                PsiWhiteSpace(' ')
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('keys')
                  PsiElement(DOT)('.')
                  NapileCallExpression(CALL_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('size')
                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(BODY)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                VARIABLE
                  MODIFIER_LIST('')
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  TYPE_PARAMETER_LIST('')
                  PsiElement(IDENTIFIER)('k')
                  PsiWhiteSpace(' ')
                  PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('keys')
                    NapileContainerNode(INDICES)
                      PsiElement(LBRACKET)('[')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('index')
                      PsiElement(RBRACKET)(']')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('k')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EQEQ)('==')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('key')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t')
                  NapileContainerNode(THEN)
                    NapileBlockExpressionImpl(BLOCK)
                      PsiElement(LBRACE)('{')
                      PsiWhiteSpace('\n\t\t\t\t')
                      MODIFIER_LIST('')
                      NapileBinaryExpression(BINARY_EXPRESSION)
                        NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('values')
                          NapileContainerNode(INDICES)
                            PsiElement(LBRACKET)('[')
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('index')
                            PsiElement(RBRACKET)(']')
                        PsiWhiteSpace(' ')
                        NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                          PsiElement(EQ)('=')
                        PsiWhiteSpace(' ')
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('value')
                      PsiWhiteSpace('\n\t\t\t\t')
                      MODIFIER_LIST('')
                      NapileReturnExpression(RETURN)
                        PsiElement(return)('return')
                      PsiWhiteSpace('\n\t\t\t')
                      PsiElement(RBRACE)('}')
                PsiWhiteSpace('\n\n\t\t\t')
                MODIFIER_LIST('')
                NapilePostfixExpression(POSTFIX_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('index')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUSPLUS)('++')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('keys')
            PsiElement(DOT)('.')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('add')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('key')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('values')
            PsiElement(DOT)('.')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('add')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('value')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapilePostfixExpression(POSTFIX_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('size')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(PLUSPLUS)('++')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('get')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('key')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('K')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('V')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileConstantExpressionImpl(INTEGER_CONSTANT)
              PsiElement(INTEGER_LITERAL)('0')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileWhileExpression(WHILE)
            PsiElement(while)('while')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('index')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(LT)('<')
                PsiWhiteSpace(' ')
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('keys')
                  PsiElement(DOT)('.')
                  NapileCallExpression(CALL_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('size')
                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(BODY)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                VARIABLE
                  MODIFIER_LIST('')
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  TYPE_PARAMETER_LIST('')
                  PsiElement(IDENTIFIER)('k')
                  PsiWhiteSpace(' ')
                  PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('keys')
                    NapileContainerNode(INDICES)
                      PsiElement(LBRACKET)('[')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('index')
                      PsiElement(RBRACKET)(']')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('k')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EQEQ)('==')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('key')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t\t')
                  NapileContainerNode(THEN)
                    NapileReturnExpression(RETURN)
                      PsiElement(return)('return')
                      PsiWhiteSpace(' ')
                      NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('values')
                        NapileContainerNode(INDICES)
                          PsiElement(LBRACKET)('[')
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('index')
                          PsiElement(RBRACKET)(']')
                PsiWhiteSpace('\n\n\t\t\t')
                MODIFIER_LIST('')
                NapilePostfixExpression(POSTFIX_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('index')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUSPLUS)('++')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('TypeUtil')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('getDefaultValue')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
                      PsiElement(true)('true')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('size')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Int')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('size')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
