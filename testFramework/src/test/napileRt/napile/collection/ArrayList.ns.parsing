NapileFileImpl: ArrayList.ns
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('collection')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('annotation')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('ImmutableTarget')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('annotation')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('InheritImmutable')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST('')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('ArrayList')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        MODIFIER_LIST('')
        PsiElement(IDENTIFIER)('E')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    NapileTypeListImpl(EXTEND_TYPE_LIST)
      NapileTypeReferenceImpl(TYPE_REFERENCE)
        NapileUserTypeImpl(USER_TYPE)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('List')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('E')
            PsiElement(GT)('>')
    PsiWhiteSpace('\n')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('data')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Array')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('E')
              PsiElement(GT)('>')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('size')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Int')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileConstantExpressionImpl(INTEGER_CONSTANT)
          PsiElement(INTEGER_LITERAL)('0')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('predefinedSize')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Int')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(INTEGER_CONSTANT)
                PsiElement(INTEGER_LITERAL)('10')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('data')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Array')
              NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                PsiElement(LT)('<')
                NapileTypeReferenceImpl(TYPE_REFERENCE)
                  NapileUserTypeImpl(USER_TYPE)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('E')
                PsiElement(GT)('>')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('predefinedSize')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          NapileAnnotationImpl(ANNOTATION)
            PsiElement(AT)('@')
            NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('ImmutableTarget')
          PsiWhiteSpace('\n\t')
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('add')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('e')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('E')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Bool')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileCallExpression(CALL_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('ensureCapacity')
            NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
              PsiElement(LPAR)('(')
              NapileValueArgument(VALUE_ARGUMENT)
                NapileBinaryExpression(BINARY_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('size')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUS)('+')
                  PsiWhiteSpace(' ')
                  NapileConstantExpressionImpl(INTEGER_CONSTANT)
                    PsiElement(INTEGER_LITERAL)('1')
              PsiElement(RPAR)(')')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('data')
              NapileContainerNode(INDICES)
                PsiElement(LBRACKET)('[')
                NapilePostfixExpression(POSTFIX_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('size')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(PLUSPLUS)('++')
                PsiElement(RBRACKET)(']')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('e')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileConstantExpressionImpl(BOOLEAN_CONSTANT)
              PsiElement(true)('true')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('set')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Int')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('e')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('E')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileBinaryExpression(BINARY_EXPRESSION)
            NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('data')
              NapileContainerNode(INDICES)
                PsiElement(LBRACKET)('[')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('index')
                PsiElement(RBRACKET)(']')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
              PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('e')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('get')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('index')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Int')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('E')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('data')
          NapileContainerNode(INDICES)
            PsiElement(LBRACKET)('[')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('index')
            PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(local)('local')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('ensureCapacity')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('minCapacity')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Int')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(var)('var')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('oldCapacity')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('data')
              PsiElement(DOT)('.')
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('length')
            PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiWhiteSpace(' ')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('minCapacity')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(GT)('>')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('oldCapacity')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(THEN)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                VARIABLE
                  MODIFIER_LIST('')
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  TYPE_PARAMETER_LIST('')
                  PsiElement(IDENTIFIER)('newCapacity')
                  PsiWhiteSpace(' ')
                  PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileBinaryExpression(BINARY_EXPRESSION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileParenthesizedExpression(PARENTHESIZED)
                        PsiElement(LPAR)('(')
                        NapileBinaryExpression(BINARY_EXPRESSION)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('oldCapacity')
                          PsiWhiteSpace(' ')
                          NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                            PsiElement(MUL)('*')
                          PsiWhiteSpace(' ')
                          NapileConstantExpressionImpl(INTEGER_CONSTANT)
                            PsiElement(INTEGER_LITERAL)('3')
                        PsiElement(RPAR)(')')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(DIV)('/')
                      PsiWhiteSpace(' ')
                      NapileConstantExpressionImpl(INTEGER_CONSTANT)
                        PsiElement(INTEGER_LITERAL)('2')
                    PsiWhiteSpace(' ')
                    NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                      PsiElement(PLUS)('+')
                    PsiWhiteSpace(' ')
                    NapileConstantExpressionImpl(INTEGER_CONSTANT)
                      PsiElement(INTEGER_LITERAL)('1')
                  PsiElement(SEMICOLON)(';')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileIfExpression(IF)
                  PsiElement(if)('if')
                  PsiWhiteSpace(' ')
                  PsiElement(LPAR)('(')
                  NapileContainerNode(CONDITION)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('newCapacity')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(LT)('<')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('minCapacity')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace('\n\t\t\t\t')
                  NapileContainerNode(THEN)
                    NapileBinaryExpression(BINARY_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('newCapacity')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                        PsiElement(EQ)('=')
                      PsiWhiteSpace(' ')
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('minCapacity')
                PsiElement(SEMICOLON)(';')
                PsiWhiteSpace('\n\n\t\t\t')
                MODIFIER_LIST('')
                NapileBinaryExpression(BINARY_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('data')
                  PsiWhiteSpace(' ')
                  NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                    PsiElement(EQ)('=')
                  PsiWhiteSpace(' ')
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('ArrayUtil')
                    PsiElement(DOT)('.')
                    NapileCallExpression(CALL_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('copyOf')
                      NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                        PsiElement(LPAR)('(')
                        NapileValueArgument(VALUE_ARGUMENT)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('data')
                        PsiElement(COMMA)(',')
                        PsiWhiteSpace(' ')
                        NapileValueArgument(VALUE_ARGUMENT)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('newCapacity')
                        PsiElement(RPAR)(')')
                PsiElement(SEMICOLON)(';')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('iterator')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileAnnotationImpl(ANNOTATION)
            PsiElement(AT)('@')
            NapileConstructorCalleeExpressionImpl(CONSTRUCTOR_CALLEE)
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('InheritImmutable')
          PsiWhiteSpace(' ')
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Iterator')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('E')
              PsiElement(GT)('>')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('ListIterator')
          NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
            PsiElement(LT)('<')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('E')
            PsiElement(GT)('>')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileThisExpression(THIS_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(this)('this')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(override)('override')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('size')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('size')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
