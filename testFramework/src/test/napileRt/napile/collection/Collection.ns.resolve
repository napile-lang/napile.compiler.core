<null>package <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.collection]>collection</PackageDescriptorImpl[napile.collection]></null>

/**
 * @author VISTALL
 */
abstract class Collection<E> : <MutableClassDescriptor[napile.collection.Iterable]>Iterable</MutableClassDescriptor[napile.collection.Iterable]><<TypeParameterDescriptorImpl[napile.collection.Collection.E]>E</TypeParameterDescriptorImpl[napile.collection.Collection.E]>> & <MutableClassDescriptor[napile.collection.Sizeable]>Sizeable</MutableClassDescriptor[napile.collection.Sizeable]>
{
	local val emptyArray = <ConstructorDescriptor[napile.lang.Array.this]>Array</ConstructorDescriptor[napile.lang.Array.this]><<TypeParameterDescriptorImpl[napile.collection.Collection.E]>E</TypeParameterDescriptorImpl[napile.collection.Collection.E]>>(0)

	meth toArray() : <MutableClassDescriptor[napile.lang.Array]>Array</MutableClassDescriptor[napile.lang.Array]><<TypeParameterDescriptorImpl[napile.collection.Collection.E]>E</TypeParameterDescriptorImpl[napile.collection.Collection.E]>>
	{
		if (<SimpleMethodDescriptorImpl[napile.collection.Collection.isEmpty]>isEmpty</SimpleMethodDescriptorImpl[napile.collection.Collection.isEmpty]>())
			return <VariableDescriptorImpl[napile.collection.Collection.emptyArray]>emptyArray</VariableDescriptorImpl[napile.collection.Collection.emptyArray]>
		else
		{
			var array = <ConstructorDescriptor[napile.lang.Array.this]>Array</ConstructorDescriptor[napile.lang.Array.this]><<TypeParameterDescriptorImpl[napile.collection.Collection.E]>E</TypeParameterDescriptorImpl[napile.collection.Collection.E]>>(<SimpleMethodDescriptorImpl[napile.collection.Collection.size]>size</SimpleMethodDescriptorImpl[napile.collection.Collection.size]>())
			var index = 0
			for(e in <MutableClassDescriptor[napile.collection.Collection]>this</MutableClassDescriptor[napile.collection.Collection]>)
				<SimpleMethodDescriptorImpl[napile.lang.Array.set]><LocalVariableDescriptor[napile.collection.Collection.toArray.array]>array</LocalVariableDescriptor[napile.collection.Collection.toArray.array]>[<LocalVariableDescriptor[napile.collection.Collection.toArray.index]>index</LocalVariableDescriptor[napile.collection.Collection.toArray.index]> <SimpleMethodDescriptorImpl[napile.lang.Int.inc]>++</SimpleMethodDescriptorImpl[napile.lang.Int.inc]>]</SimpleMethodDescriptorImpl[napile.lang.Array.set]> <null>=</null> <LocalVariableDescriptor[napile.collection.Collection.toArray.e]>e</LocalVariableDescriptor[napile.collection.Collection.toArray.e]>
			return <LocalVariableDescriptor[napile.collection.Collection.toArray.array]>array</LocalVariableDescriptor[napile.collection.Collection.toArray.array]>
		}
	}
}