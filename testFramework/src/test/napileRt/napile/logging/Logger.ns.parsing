NapileFileImpl: Logger.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('logging')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Class')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('logging')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('impl')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('LoggerImpl')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('module')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('extension')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('ExtensionPointName')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('napile')
            PsiElement(DOT)('.')
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('module')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('extension')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('descriptors')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('SimpleFactoryExtensionWithId')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('collection')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('IterableUtil')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('select')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST
      PsiElement(abstract)('abstract')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Logger')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(static)('static')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('EP_NAME')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('ExtensionPointName')
            NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
              PsiElement(LT)('<')
              NapileTypeReferenceImpl(TYPE_REFERENCE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('SimpleFactoryExtensionWithId')
                  NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                    PsiElement(LT)('<')
                    NapileTypeReferenceImpl(TYPE_REFERENCE)
                      NapileUserTypeImpl(USER_TYPE)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('Logger')
                    PsiElement(GT)('>')
              PsiElement(GT)('>')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('ExtensionPointName')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileConstantExpressionImpl(STRING_CONSTANT)
                PsiElement(STRING_LITERAL)(''napile.lang'')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileConstantExpressionImpl(STRING_CONSTANT)
                PsiElement(STRING_LITERAL)(''logger'')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      VARIABLE
        MODIFIER_LIST
          PsiElement(static)('static')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        TYPE_PARAMETER_LIST('')
        PsiElement(IDENTIFIER)('System')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Logger')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('Logger')
          PsiElement(DOT)('.')
          NapileCallExpression(CALL_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('getLogger')
            NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
              PsiElement(LPAR)('(')
              NapileValueArgument(VALUE_ARGUMENT)
                NapileConstantExpressionImpl(STRING_CONSTANT)
                  PsiElement(STRING_LITERAL)(''System'')
              PsiElement(RPAR)(')')
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(static)('static')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('getLogger')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('name')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('String')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Logger')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          PsiComment(EOL_COMMENT)('// select extension by name')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('extension')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('EP_NAME')
                PsiElement(DOT)('.')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('getValues')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    PsiElement(RPAR)(')')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('select')
                NapileAnonymMethodExpressionImpl(ANONYM_METHOD_EXPRESSION)
                  NapileAnonymMethodImpl(ANONYM_METHOD)
                    PsiElement(LBRACE)('{')
                    NapileBlockExpressionImpl(BLOCK)
                      MODIFIER_LIST('')
                      NapileBinaryExpression(BINARY_EXPRESSION)
                        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('value')
                          PsiElement(DOT)('.')
                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                            PsiElement(IDENTIFIER)('id')
                        PsiWhiteSpace(' ')
                        NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                          PsiElement(EQEQ)('==')
                        PsiWhiteSpace(' ')
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('name')
                    PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('extension')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EXCLEQ)('!=')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(NULL)
                  PsiElement(null)('null')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t')
            NapileContainerNode(THEN)
              NapileBlockExpressionImpl(BLOCK)
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n\t\t\t')
                MODIFIER_LIST('')
                NapileReturnExpression(RETURN)
                  PsiElement(return)('return')
                  PsiWhiteSpace(' ')
                  NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(IDENTIFIER)('extension')
                    PsiElement(DOT)('.')
                    NapileCallExpression(CALL_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('create')
                      NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                        PsiElement(LPAR)('(')
                        PsiElement(RPAR)(')')
                PsiWhiteSpace('\n\t\t')
                PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\n\t\t')
          PsiComment(EOL_COMMENT)('//TODO [VISTALL] if no extension get by '*'')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileReturnExpression(RETURN)
            PsiElement(return)('return')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('LoggerImpl')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                NapileValueArgument(VALUE_ARGUMENT)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('name')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST
          PsiElement(static)('static')
        PsiWhiteSpace(' ')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('getLogger')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('clazz')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Class')
                NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                  PsiElement(LT)('<')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileNullableTypeImpl(NULLABLE_TYPE)
                      NapileUserTypeImpl(USER_TYPE)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('Any')
                      PsiElement(QUEST)('?')
                  PsiElement(GT)('>')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Logger')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('getLogger')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('clazz')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('name')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      CONSTRUCTOR
        MODIFIER_LIST('')
        PsiElement(this)('this')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('info')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('message')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('exception')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Exception')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Null')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('log')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('LoggingLevel')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('INFO')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('message')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('exception')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('warn')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('message')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('exception')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Exception')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Null')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('log')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('LoggingLevel')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('WARN')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('message')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('exception')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('error')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('message')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('exception')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Exception')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        NapileTypeReferenceImpl(TYPE_REFERENCE)
          NapileUserTypeImpl(USER_TYPE)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('Null')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        NapileCallExpression(CALL_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('log')
          NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
            PsiElement(LPAR)('(')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('LoggingLevel')
                PsiElement(DOT)('.')
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('ERROR')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('message')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            NapileValueArgument(VALUE_ARGUMENT)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('exception')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('log')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('level')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('LoggingLevel')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('message')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('exception')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileNullableTypeImpl(NULLABLE_TYPE)
                NapileUserTypeImpl(USER_TYPE)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('Exception')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            NapileContainerNode(DEFAULT_VALUE_NODE)
              PsiElement(EQ)('=')
              PsiWhiteSpace(' ')
              NapileConstantExpressionImpl(NULL)
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
