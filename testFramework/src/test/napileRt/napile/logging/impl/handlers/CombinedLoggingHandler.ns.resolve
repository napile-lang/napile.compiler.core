/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.logging">logging</ref>.<ref class="PackageDescriptorImpl" to="napile.logging.impl">impl</ref>.<ref class="PackageDescriptorImpl" to="napile.logging.impl.handlers">handlers</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.logging">logging</ref>.<ref class="MutableClassDescriptor" to="napile.logging.LoggingHandler">LoggingHandler</ref>
import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.logging">logging</ref>.<ref class="MutableClassDescriptor" to="napile.logging.LoggingMessage">LoggingMessage</ref>
import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.collection">collection</ref>.<ref class="MutableClassDescriptor" to="napile.collection.Iterable">Iterable</ref>

/**
 * @author VISTALL
 */
class CombinedLoggingHandler : <ref class="MutableClassDescriptor" to="napile.logging.LoggingHandler">LoggingHandler</ref>
{
	local val items : <ref class="MutableClassDescriptor" to="napile.collection.Iterable">Iterable</ref><<ref class="MutableClassDescriptor" to="napile.logging.LoggingHandler">LoggingHandler</ref>>

	this(<ref class="VariableDescriptorImpl" to="napile.logging.impl.handlers.CombinedLoggingHandler.items">items</ref>) : <ref class="MutableClassDescriptor" to="napile.logging.LoggingHandler">LoggingHandler</ref>()

	override meth log(val message: <ref class="MutableClassDescriptor" to="napile.logging.LoggingMessage">LoggingMessage</ref>)
	{
		for(i in <ref class="VariableDescriptorImpl" to="napile.logging.impl.handlers.CombinedLoggingHandler.items">items</ref>)
			<ref class="LocalVariableDescriptor" to="napile.logging.impl.handlers.CombinedLoggingHandler.log.i">i</ref>.<ref class="SimpleMethodDescriptorImpl" to="napile.logging.LoggingHandler.log">log</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="napile.logging.impl.handlers.CombinedLoggingHandler.log.message">message</ref>)
	}
}