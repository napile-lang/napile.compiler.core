/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <PackageDescriptorImpl[xml]>xml</PackageDescriptorImpl[xml]>.<PackageDescriptorImpl[xml.annotation]>annotation</PackageDescriptorImpl[xml.annotation]>

import <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.annotation]>annotation</PackageDescriptorImpl[napile.annotation]>.<MutableClassDescriptor[napile.annotation.Annotation]>Annotation</MutableClassDescriptor[napile.annotation.Annotation]>

/**
 * @author VISTALL
 * @date 11:00/17.01.13
 */
@<MutableClassDescriptor[napile.annotation.Annotation]>Annotation</MutableClassDescriptor[napile.annotation.Annotation]>
class DomAttribute
{
	val name : <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>

	val converter : {(val arg : <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>) -> <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>}

	this(<VariableDescriptorImpl[xml.annotation.DomAttribute.name]>name</VariableDescriptorImpl[xml.annotation.DomAttribute.name]>, <VariableDescriptorImpl[xml.annotation.DomAttribute.converter]>converter</VariableDescriptorImpl[xml.annotation.DomAttribute.converter]> = {<CallParameterAsVariableDescriptorImpl[xml.annotation.DomAttribute.this.@noname.value]>value</CallParameterAsVariableDescriptorImpl[xml.annotation.DomAttribute.this.@noname.value]>})
}