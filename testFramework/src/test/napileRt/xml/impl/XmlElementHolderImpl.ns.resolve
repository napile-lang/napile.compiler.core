/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<null>package <PackageDescriptorImpl[xml]>xml</PackageDescriptorImpl[xml]>.<PackageDescriptorImpl[xml.impl]>impl</PackageDescriptorImpl[xml.impl]></null>

import <PackageDescriptorImpl[xml]>xml</PackageDescriptorImpl[xml]>.<MutableClassDescriptor[xml.XmlElementHolder]>XmlElementHolder</MutableClassDescriptor[xml.XmlElementHolder]>
import <PackageDescriptorImpl[xml]>xml</PackageDescriptorImpl[xml]>.<MutableClassDescriptor[xml.XmlElement]>XmlElement</MutableClassDescriptor[xml.XmlElement]>
import <PackageDescriptorImpl[napile]>napile</PackageDescriptorImpl[napile]>.<PackageDescriptorImpl[napile.collection]>collection</PackageDescriptorImpl[napile.collection]>.<MutableClassDescriptor[napile.collection.IterableUtil]>IterableUtil</MutableClassDescriptor[napile.collection.IterableUtil]>

/**
 * @author VISTALL
 */
class XmlElementHolderImpl : <MutableClassDescriptor[xml.XmlElementHolder]>XmlElementHolder</MutableClassDescriptor[xml.XmlElementHolder]>
{
	local val elements: <MutableClassDescriptor[napile.lang.Array]>Array</MutableClassDescriptor[napile.lang.Array]><<MutableClassDescriptor[xml.XmlElement]>XmlElement</MutableClassDescriptor[xml.XmlElement]>>

	this(<VariableDescriptorImpl[xml.impl.XmlElementHolderImpl.elements]>elements</VariableDescriptorImpl[xml.impl.XmlElementHolderImpl.elements]>)

	override meth get(val elementName : <MutableClassDescriptor[napile.lang.String]>String</MutableClassDescriptor[napile.lang.String]>) : <MutableClassDescriptor[xml.XmlElement]>XmlElement</MutableClassDescriptor[xml.XmlElement]>?
	{
		return <MutableClassDescriptor[napile.collection.IterableUtil]>IterableUtil</MutableClassDescriptor[napile.collection.IterableUtil]>.<SimpleMethodDescriptorImpl[napile.collection.IterableUtil.select]>select</SimpleMethodDescriptorImpl[napile.collection.IterableUtil.select]>(<VariableDescriptorImpl[xml.impl.XmlElementHolderImpl.elements]>elements</VariableDescriptorImpl[xml.impl.XmlElementHolderImpl.elements]>, {(a) -> <CallParameterAsVariableDescriptorImpl[xml.impl.XmlElementHolderImpl.get.@noname.a]>a</CallParameterAsVariableDescriptorImpl[xml.impl.XmlElementHolderImpl.get.@noname.a]>.<SimpleMethodDescriptorImpl[xml.XmlElement.getName]>getName</SimpleMethodDescriptorImpl[xml.XmlElement.getName]>() <SimpleMethodDescriptorImpl[napile.lang.String.equals]>==</SimpleMethodDescriptorImpl[napile.lang.String.equals]> <CallParameterAsVariableDescriptorImpl[xml.impl.XmlElementHolderImpl.get.elementName]>elementName</CallParameterAsVariableDescriptorImpl[xml.impl.XmlElementHolderImpl.get.elementName]>})
	}
}