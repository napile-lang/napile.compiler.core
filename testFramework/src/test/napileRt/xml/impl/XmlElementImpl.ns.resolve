/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="xml">xml</ref>.<ref class="PackageDescriptorImpl" to="xml.impl">impl</ref>

import <ref class="PackageDescriptorImpl" to="xml">xml</ref>.<ref class="MutableClassDescriptor" to="xml.XmlElement">XmlElement</ref>

/**
 * @author VISTALL
 */
class XmlElementImpl : <ref class="MutableClassDescriptor" to="xml.XmlElement">XmlElement</ref> & <ref class="MutableClassDescriptor" to="xml.impl.XmlElementHolderImpl">XmlElementHolderImpl</ref>
{
	this(val name : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>, val elements : <ref class="MutableClassDescriptor" to="napile.lang.Array">Array</ref><<ref class="MutableClassDescriptor" to="xml.XmlElement">XmlElement</ref>>) : <ref class="MutableClassDescriptor" to="xml.impl.XmlElementHolderImpl">XmlElementHolderImpl</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="xml.impl.XmlElementImpl.this.elements">elements</ref>) & <ref class="MutableClassDescriptor" to="xml.XmlElement">XmlElement</ref>(<ref class="CallParameterAsVariableDescriptorImpl" to="xml.impl.XmlElementImpl.this.name">name</ref>)

	override meth getName() : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>
	{
		throw <ref class="ConstructorDescriptor" to="napile.lang.UnsupportedOperationException.this">UnsupportedOperationException</ref>()
	}
}