NapileFileImpl: MainCaller.ns
  PsiComment(BLOCK_COMMENT)('/*\n * Copyright 2010-2013 napile.org\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiWhiteSpace('\n\n')
  NapilePackageImpl(PACKAGE)
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('org')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('napile')
    PsiElement(DOT)('.')
    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
      PsiElement(IDENTIFIER)('vm')
  PsiWhiteSpace('\n\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('ReflectUtil')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('logging')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Logger')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('napile')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('reflect')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('Method')
  PsiWhiteSpace('\n')
  NapileImportDirective(IMPORT_DIRECTIVE)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
      NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('napile')
          PsiElement(DOT)('.')
          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(IDENTIFIER)('asm')
        PsiElement(DOT)('.')
        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
          PsiElement(IDENTIFIER)('AsmUtil')
      PsiElement(DOT)('.')
      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
        PsiElement(IDENTIFIER)('toAsmType')
  PsiWhiteSpace('\n\n')
  PsiComment(BLOCK_COMMENT)('/**\n * @author VISTALL\n */')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST
      PsiElement(util)('util')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('MainCaller')
    PsiWhiteSpace('\n')
    TYPE_PARAMETER_LIST('')
    NapileClassBody(CLASS_BODY)
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\t')
      METHOD
        MODIFIER_LIST('')
        PsiElement(meth)('meth')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('main')
        TYPE_PARAMETER_LIST('')
        CALL_PARAMETER_LIST
          PsiElement(LPAR)('(')
          CALL_PARAMETER_AS_VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('arg')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            NapileTypeReferenceImpl(TYPE_REFERENCE)
              NapileUserTypeImpl(USER_TYPE)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('Array')
                NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                  PsiElement(LT)('<')
                  NapileTypeReferenceImpl(TYPE_REFERENCE)
                    NapileUserTypeImpl(USER_TYPE)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('String')
                  PsiElement(GT)('>')
          PsiElement(RPAR)(')')
        PsiWhiteSpace('\n\t')
        NapileBlockExpressionImpl(BLOCK)
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('arg')
                  PsiElement(DOT)('.')
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('length')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EQEQ)('==')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(INTEGER_CONSTANT)
                  PsiElement(INTEGER_LITERAL)('0')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileThrowExpression(THROW)
                PsiElement(throw)('throw')
                PsiWhiteSpace(' ')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('VmStartupError')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    NapileValueArgument(VALUE_ARGUMENT)
                      NapileConstantExpressionImpl(STRING_CONSTANT)
                        PsiElement(STRING_LITERAL)('"Class name - expected"')
                    PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('clazz')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('ReflectUtil')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('findClass')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                      NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                        PsiElement(IDENTIFIER)('arg')
                      NapileContainerNode(INDICES)
                        PsiElement(LBRACKET)('[')
                        NapileConstantExpressionImpl(INTEGER_CONSTANT)
                          PsiElement(INTEGER_LITERAL)('0')
                        PsiElement(RBRACKET)(']')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('mainMethod')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('clazz')
              PsiElement(DOT)('.')
              NapileCallExpression(CALL_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('findStaticMethod')
                NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                  PsiElement(LPAR)('(')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileConstantExpressionImpl(STRING_CONSTANT)
                      PsiElement(STRING_LITERAL)('"main"')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  NapileValueArgument(VALUE_ARGUMENT)
                    NapileArrayOfExpressionImpl(ARRAY)
                      PsiElement(arrayOf)('arrayOf')
                      PsiElement(LPAR)('(')
                      NapileCallExpression(CALL_EXPRESSION)
                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                          PsiElement(IDENTIFIER)('toAsmType')
                        NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                          PsiElement(LT)('<')
                          NapileTypeReferenceImpl(TYPE_REFERENCE)
                            NapileUserTypeImpl(USER_TYPE)
                              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(IDENTIFIER)('Array')
                              NapileTypeArgumentListImpl(TYPE_ARGUMENT_LIST)
                                PsiElement(LT)('<')
                                NapileTypeReferenceImpl(TYPE_REFERENCE)
                                  NapileUserTypeImpl(USER_TYPE)
                                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                      PsiElement(IDENTIFIER)('String')
                                PsiElement(GT)('>')
                          PsiElement(GT)('>')
                        NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                          PsiElement(LPAR)('(')
                          PsiElement(RPAR)(')')
                      PsiElement(RPAR)(')')
                  PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          MODIFIER_LIST('')
          NapileIfExpression(IF)
            PsiElement(if)('if')
            PsiElement(LPAR)('(')
            NapileContainerNode(CONDITION)
              NapileBinaryExpression(BINARY_EXPRESSION)
                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(IDENTIFIER)('mainMethod')
                PsiWhiteSpace(' ')
                NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                  PsiElement(EQEQ)('==')
                PsiWhiteSpace(' ')
                NapileConstantExpressionImpl(NULL)
                  PsiElement(null)('null')
            PsiElement(RPAR)(')')
            PsiWhiteSpace('\n\t\t\t')
            NapileContainerNode(THEN)
              NapileThrowExpression(THROW)
                PsiElement(throw)('throw')
                PsiWhiteSpace(' ')
                NapileCallExpression(CALL_EXPRESSION)
                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(IDENTIFIER)('VmStartupError')
                  NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                    PsiElement(LPAR)('(')
                    NapileValueArgument(VALUE_ARGUMENT)
                      NapileConstantExpressionImpl(STRING_CONSTANT)
                        PsiElement(STRING_LITERAL)('"'static meth main(val arg : Array<String>)' method expected"')
                    PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\n\t\t')
          VARIABLE
            MODIFIER_LIST('')
            PsiElement(val)('val')
            PsiWhiteSpace(' ')
            TYPE_PARAMETER_LIST('')
            PsiElement(IDENTIFIER)('thread')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('Thread')
              PsiWhiteSpace(' ')
              NapileAnonymMethodExpressionImpl(ANONYM_METHOD_EXPRESSION)
                NapileAnonymMethodImpl(ANONYM_METHOD)
                  PsiElement(LBRACE)('{')
                  PsiWhiteSpace('\n\t\t\t')
                  NapileBlockExpressionImpl(BLOCK)
                    MODIFIER_LIST('')
                    NapileTryExpression(TRY)
                      PsiElement(try)('try')
                      PsiWhiteSpace('\n\t\t\t')
                      NapileBlockExpressionImpl(BLOCK)
                        PsiElement(LBRACE)('{')
                        PsiWhiteSpace('\n\t\t\t\t')
                        MODIFIER_LIST('')
                        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                          NapilePostfixExpression(POSTFIX_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('mainMethod')
                            NapileSimpleNameExpressionImpl(OPERATION_REFERENCE)
                              PsiElement(EXCLEXCL)('!!')
                          PsiElement(DOT)('.')
                          NapileCallExpression(CALL_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('invokeStatic')
                            NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                              PsiElement(LPAR)('(')
                              NapileValueArgument(VALUE_ARGUMENT)
                                NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                                  NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                    PsiElement(IDENTIFIER)('ArrayUtil')
                                  PsiElement(DOT)('.')
                                  NapileCallExpression(CALL_EXPRESSION)
                                    NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                      PsiElement(IDENTIFIER)('copyOfRange')
                                    NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                                      PsiElement(LPAR)('(')
                                      NapileValueArgument(VALUE_ARGUMENT)
                                        NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                          PsiElement(IDENTIFIER)('arg')
                                      PsiElement(COMMA)(',')
                                      PsiWhiteSpace(' ')
                                      NapileValueArgument(VALUE_ARGUMENT)
                                        NapileConstantExpressionImpl(INTEGER_CONSTANT)
                                          PsiElement(INTEGER_LITERAL)('1')
                                      PsiElement(COMMA)(',')
                                      PsiWhiteSpace(' ')
                                      NapileValueArgument(VALUE_ARGUMENT)
                                        NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(IDENTIFIER)('arg')
                                          PsiElement(DOT)('.')
                                          NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                            PsiElement(IDENTIFIER)('length')
                                      PsiElement(RPAR)(')')
                              PsiElement(RPAR)(')')
                        PsiWhiteSpace('\n\t\t\t')
                        PsiElement(RBRACE)('}')
                      PsiWhiteSpace('\n\t\t\t')
                      NapileCatchClause(CATCH)
                        PsiElement(catch)('catch')
                        CALL_PARAMETER_LIST
                          PsiElement(LPAR)('(')
                          CALL_PARAMETER_AS_VARIABLE
                            MODIFIER_LIST('')
                            PsiElement(val)('val')
                            PsiWhiteSpace(' ')
                            PsiElement(IDENTIFIER)('e')
                            PsiWhiteSpace(' ')
                            PsiElement(COLON)(':')
                            PsiWhiteSpace(' ')
                            NapileTypeReferenceImpl(TYPE_REFERENCE)
                              NapileUserTypeImpl(USER_TYPE)
                                NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                  PsiElement(IDENTIFIER)('Exception')
                          PsiElement(RPAR)(')')
                        PsiWhiteSpace('\n\t\t\t')
                        NapileBlockExpressionImpl(BLOCK)
                          PsiElement(LBRACE)('{')
                          PsiWhiteSpace('\n\t\t\t\t')
                          MODIFIER_LIST('')
                          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
                            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                              PsiElement(IDENTIFIER)('e')
                            PsiElement(DOT)('.')
                            NapileCallExpression(CALL_EXPRESSION)
                              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                                PsiElement(IDENTIFIER)('printStackTrace')
                              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                                PsiElement(LPAR)('(')
                                PsiElement(RPAR)(')')
                          PsiWhiteSpace('\n\t\t\t')
                          PsiElement(RBRACE)('}')
                    PsiWhiteSpace('\n\t\t\t')
                    MODIFIER_LIST('')
                    NapileConstantExpressionImpl(NULL)
                      PsiElement(null)('null')
                  PsiWhiteSpace('\n\t\t')
                  PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n\n\t\t')
          MODIFIER_LIST('')
          NapileDotQualifiedExpressionImpl(DOT_QUALIFIED_EXPRESSION)
            NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('thread')
            PsiElement(DOT)('.')
            NapileCallExpression(CALL_EXPRESSION)
              NapileSimpleNameExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(IDENTIFIER)('start')
              NapileValueArgumentListImpl(VALUE_ARGUMENT_LIST)
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
