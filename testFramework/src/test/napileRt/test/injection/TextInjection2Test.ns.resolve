/*
 * Copyright 2010-2013 napile.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package <ref class="PackageDescriptorImpl" to="test">test</ref>.<ref class="PackageDescriptorImpl" to="test.injection">injection</ref>

import <ref class="PackageDescriptorImpl" to="napile">napile</ref>.<ref class="PackageDescriptorImpl" to="napile.logging">logging</ref>.<ref class="MutableClassDescriptor" to="napile.logging.Logger">Logger</ref>

class TextInjection2Test
{
	static meth main(val arg : <ref class="MutableClassDescriptor" to="napile.lang.Array">Array</ref><<ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>>)
	{
		var i : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref> =  /:text this call of method: #{<ref class="SimpleMethodDescriptorImpl" to="test.injection.TextInjection2Test.callTo">callTo</ref>()}() :/

		<ref class="MutableClassDescriptor" to="napile.logging.Logger">Logger</ref>.<ref class="VariableDescriptorImpl" to="napile.logging.Logger.System">System</ref>.<ref class="SimpleMethodDescriptorImpl" to="napile.logging.Logger.info">info</ref>(<ref class="LocalVariableDescriptor" to="test.injection.TextInjection2Test.main.i">i</ref>)
	}

	static meth callTo() : <ref class="MutableClassDescriptor" to="napile.lang.String">String</ref>
	{
		return 'callTo'
	}
}